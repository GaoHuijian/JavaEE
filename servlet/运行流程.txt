V_1.0 web工程结构
       *) SRC :  java源代码 (XXX.java)
       *) WebRoot:  工程根目录文件夹
                  1) 配置文件  ( xml  properties)
                  2) 页面视图文件(html,jsp)
                  3) java执行文件 (XXX.class)

V_2.0 如何将一个web工程编译后,发布到tomcat服务器上.
      * 一个web工程,只能将WebRoot下内容发布到服务器上.
      * web发布流程(重要)
            1.编译.将SRC下Java文件编译成class文件.
                                       将class文件保存到WebRoot文件下
            2. 发布: 将工程WebRoot文件夹发送到tomcat中webapps文件下   
            
 V_3.0  开发一个真正实现servelt接口的实现类
 
         1) 开发一个实现 javax.servlet.Servelt接口实现类.
         2) 配置当前类请求路径
              WebRoot/WEB-INF/web.xml 
              
              2.1) 为servlet实现类设置别名
                   <servlet>
                     <servlet-name>别名</servlet-name>
                     <servlet-class>servlet实现类完整路径</servlet-class>
                   </servlet>          
            
             2.2) 为servlet指定具体的请求路径
             
                   <servlet-mapping>
                      <servlet-name>别名</servlet-name>
                      <url-pattern>/资源名称</url-pattern>
                   </servlet-mapping>
            
            
 V_4.0 tomcat 如何管理 servlet实现类(一个servlet对象声明周期.)
         1. tomcat接收到请求后,将请求信息进行截取,获得具体的请求资源路径.
         2. tomcat到web-info/web.xml,寻找对应servlet实现类的路径.
         3. tomcat判断当前servelt实现类,是否被初始化过. 
                             是 直接获得这个servelt实现类对象,对象.service方法处理请求.
                             否. 看步骤4
         4.   调用servlet实现类构造方法,创建一个servlet对象.
         5.   tomcat,创建一个ServletConfig对象,并将当前servlet的配置信息保存到这个ServletConfig对象中.                                           
         6.   tomcat调用init方法,并将ServletConfig对象作为参数传入.
         7.   tomcat通过servlet对象.   service   
            
  V_5.0     
          1)  在一个Web工程运行期间,工程中servlet实现类只能被创建一次.
          2)  tomcat 判断  servlet实现类是否被创建过.
                                有 servlet.service处理业务                                  
                               否
          3)    servlet实现类   构造方法
          4)    servlet实现类   init,只能被调用一次
          5)    servlet实现类   service,每一次请求中,都会被调用
          6)   tomcat关闭时,会销毁掉所有servlet对象,当servlet对象被销毁,调用destory()


 V_6.0  ServletConfig: Servlet配置对象  / servlet初始化对象
        * 1.由tomcat负责创建并初始化的.
        * 2.一个servlet实现类要匹配一个servletConfig对象
        * 3.一个servlet实现类只能被创建一个对象.与之关联ServletConfig对象也只能被创建一次.
        作用: 为当前servlet对象保存配置信息.
        
         //获得请求参数的数据
         servletConfig.getInitParameter("参数名");
         //获得所有请求参数名称
         servletConfig.getInitParameterNames()
         //获得当前工程的全局作用域对象
         servletConfig.getServletContext();
         
 V_7.0   ServletContext接口,tomcat负责定义实现.
         * Servlet上下文环境(全局作用域)
         * 每一个工程只有一个ServletContext类型对象.
         * 工程启动时,tomcat会为当前工程创建一个ServletContext对象.
                        工程关闭时,tomcat会销毁到当前工程中ServletContext对象.
         * 在工程运行期间,所有的servlet对象都共享一个全局作用域对象.
         作用:  保存数据
             application.setAttribute("关键字",数据)                       
                       读取数据
             application.getAttribute("关键字");
        
     总结:   工程中所有的servlet对象都被封装到了ServletContext.因此在开发过程中,最好不要向ServletContext
                    再添加其他额外数据,否则会影响工程运行速度.  
        
        
        
        
        
        
        
        
        
        
        



